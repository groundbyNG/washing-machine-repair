/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box;font-family:Montserrat,Arial,Verdana,Tahoma,sans-serif;font-weight:300;font-style:normal;letter-spacing:.07rem;scroll-behavior:smooth}body{margin:0;padding:4rem 0}img{max-width:100%}a{text-decoration:none}main{margin:4rem 0 2rem 0}.padding-wrapper{padding:0 5.25rem}@media (max-width:450px){body{margin:0;padding:4rem 0 0 0}.padding-wrapper{padding:0 1rem}}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat-Light.eot);src:url(../fonts/Montserrat-Light.eot?#iefix) format("embedded-opentype"),url(../fonts/Montserrat-Light.woff2) format("woff2"),url(../fonts/Montserrat-Light.woff) format("woff"),url(../fonts/Montserrat-Light.ttf) format("truetype"),url(../fonts/Montserrat-Light.svg#Montserrat-Light) format("svg");font-weight:300;font-style:normal;font-display:swap}header{height:calc(100vh - 4rem)}header::before{background:url(../img/main.jpeg) 0 0/cover #1d1918;content:"";position:absolute;top:0;left:0;width:100%;height:100vh;z-index:-2}header::after{background:#1d1918;content:"";position:absolute;top:0;left:0;width:100%;height:100vh;z-index:-1;opacity:.4}header nav{text-align:right;margin-right:7rem;font-weight:700;font-size:18px}header nav a{text-transform:uppercase;color:#fff;padding:0 1.5rem}header .header__title{padding:11rem 0;width:34rem;color:#fff}header .header__title h1{font-size:2.3rem;line-height:2.5rem;margin-bottom:4.5rem}header .header__title h2{font-size:1.25rem}header .header__anchor{background:#fff;position:absolute;left:0;padding:1.5rem 5rem;border-radius:0 .4rem .4rem 0;color:#000}header .header__anchor::after{background:#ffefd5;content:"";position:absolute;right:-3.5rem;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);z-index:-1;width:5rem;height:3rem;border-radius:0 .25rem .25rem 0;-webkit-transition:all 1s ease-out;transition:all 1s ease-out}header .header__anchor:hover::after{right:-4.5rem}header .header__anchor span{font-size:1.25rem;font-weight:700}header .cards{display:grid;grid-template-columns:1fr 1fr 1fr;-webkit-column-gap:50px;-moz-column-gap:50px;column-gap:50px;width:66.66%;margin-left:auto}header .cards .cards__element{position:relative;padding:1.75rem 1rem;color:#fff;counter-increment:inst}header .cards .cards__element::before{content:"0" counter(inst);position:absolute;top:-3.25rem;left:0;width:100%;border-bottom:.25rem #fff solid;font-size:2rem}header .cards .cards__element::after{background:#fff;content:"";position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1;opacity:.8}header .cards .cards__element p{font-weight:700;font-size:1.2rem}header .cards .cards__element span{font-size:1rem}@media (max-width:1600px){header .header__title{padding:7rem 0}}@media (max-width:1367px){header nav{margin-right:5rem}header .header__title{padding:9rem 0}header .header__title h1{font-size:2rem;line-height:2.2rem;margin-bottom:2.5rem}header .header__title h2{font-size:1.1rem}header .phone-anchor{display:none}header .header__anchor{padding:1rem 3rem}header .header__anchor::after{height:2.5rem}header .cards .cards__element p{font-size:1rem}header .cards .cards__element span{font-size:.9rem}}@media (max-width:769px){header nav{display:none}header .header__title{width:auto}header .phone-anchor{display:block}header .header__anchor{bottom:24rem}header .header__anchor:nth-of-type(2){bottom:19rem}header .header__anchor:nth-of-type(3){bottom:14rem}header .cards{display:none}}@media (max-width:450px){header::before{background-image:url(../img/main-mobile.jpg)}header .header__title{padding:0}header .header__anchor{bottom:11rem}header .header__anchor:nth-of-type(2){bottom:6rem}header .header__anchor:nth-of-type(3){bottom:1rem}}footer{display:grid;grid-template-columns:1fr 1fr}footer .header-container{margin-left:25%}footer h2{margin:0;line-height:3rem;font-size:3rem;font-weight:lighter;text-transform:uppercase}footer h2:first-of-type{margin-left:2rem}footer h2:last-of-type{margin-left:4rem}footer .contact-number{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;margin-top:2rem}footer .contact-number .contact-icon{width:9rem;height:9rem;padding:3rem;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}footer .contact-number .separator{border-right:.1rem #000 solid}footer .contact-number span{color:#000;font-size:1.5rem;margin:auto 0 auto 3rem;border-bottom:.1rem solid transparent;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}footer .contact-number:hover .contact-icon{-webkit-filter:invert(38%) sepia(95%) saturate(393%) hue-rotate(87deg) brightness(94%) contrast(83%);filter:invert(38%) sepia(95%) saturate(393%) hue-rotate(87deg) brightness(94%) contrast(83%)}footer .contact-number:hover span{border-color:#000}footer .img-container{position:relative;max-width:40rem;padding:5rem}footer .img-container img{border:1rem #000 solid}footer .contact-container{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center}footer .front{position:absolute;bottom:10rem;left:0;z-index:2}footer .back{position:absolute;top:0;right:0;z-index:-1}footer .mobile-contact-container{display:none}footer .author{display:block;padding:1rem;color:#000;text-align:right;font-size:.75rem}footer .author span{margin-left:.5rem}footer .author span:hover{text-decoration:underline}@media (max-width:769px){footer .header-container{margin-left:10%}footer h2{line-height:2rem;font-size:2rem}footer h2:first-of-type{margin-left:1rem}footer h2:last-of-type{margin-left:2rem}footer .contact-number .contact-icon{width:5rem;height:5rem;padding:1rem}footer .contact-number span{margin:auto 0 auto 1rem}footer .img-container img{border:.25rem #000 solid}footer .front{width:10rem}}@media (max-width:450px){footer{display:block}footer .contact-container,footer .img-container{display:none}footer h2:first-of-type,footer h2:last-of-type{margin-left:0}footer .mobile-contact-container{display:block}footer .author{padding-top:5rem}}.tabs{position:relative;padding-bottom:20rem;height:250px;min-width:300px}.tabs .tabs__header{list-style:none;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:end;align-items:flex-end;flex-wrap:wrap;padding-left:0;margin-bottom:0}.tabs .tabs__header li{box-sizing:border-box;-webkit-box-flex:1;flex:1;width:20%;text-align:center;position:relative;top:4px}.tabs .tabs__header li label{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;font-size:18px;padding:14px 0;overflow:hidden;text-overflow:ellipsis;cursor:pointer;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;white-space:nowrap;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tabs .tabs__header li label:active,.tabs .tabs__header li label:focus,.tabs .tabs__header li label:hover{outline:0;color:#bec5cf}.tabs .tabs__header li label img{width:1.25rem;height:1.25rem;margin:0 .5rem}.tabs .slider{position:relative;width:20%;-webkit-transition:all .33s cubic-bezier(.38,.8,.32,1.07);transition:all .33s cubic-bezier(.38,.8,.32,1.07)}.tabs .indicator{position:relative;width:50px;max-width:100%;margin:0 auto;height:4px;background:#a59989;border-radius:1px}.tabs .content{margin-top:30px}.tabs .content section{display:none;line-height:1.4;-webkit-animation-name:content;animation-name:content;-webkit-animation-direction:normal;animation-direction:normal;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-iteration-count:1;animation-iteration-count:1}.tabs .content section h2{color:#428bff;display:none}.tabs .content section h2::after{content:"";position:relative;display:block;width:30px;height:3px;background:#428bff;margin-top:5px;left:1px}.tabs input[name=tab-control]{display:none}.tabs input[name=tab-control]:nth-of-type(1):checked~ul>li:nth-child(1)>label{cursor:default;font-weight:700;color:#000}.tabs input[name=tab-control]:nth-of-type(1):checked~ul>li:nth-child(1)>label svg{fill:#428bff}@media (max-width:1250px){.tabs input[name=tab-control]:nth-of-type(1):checked~ul>li:nth-child(1)>label{background:rgba(0,0,0,.08)}}.tabs input[name=tab-control]:nth-of-type(1):checked~.slider{-webkit-transform:translateX(0);transform:translateX(0)}.tabs input[name=tab-control]:nth-of-type(1):checked~.content>section:nth-child(1){display:block}.tabs input[name=tab-control]:nth-of-type(2):checked~ul>li:nth-child(2)>label{cursor:default;font-weight:700;color:#000}.tabs input[name=tab-control]:nth-of-type(2):checked~ul>li:nth-child(2)>label svg{fill:#428bff}@media (max-width:1250px){.tabs input[name=tab-control]:nth-of-type(2):checked~ul>li:nth-child(2)>label{background:rgba(0,0,0,.08)}}.tabs input[name=tab-control]:nth-of-type(2):checked~.slider{-webkit-transform:translateX(100%);transform:translateX(100%)}.tabs input[name=tab-control]:nth-of-type(2):checked~.content>section:nth-child(2){display:block}.tabs input[name=tab-control]:nth-of-type(3):checked~ul>li:nth-child(3)>label{cursor:default;font-weight:700;color:#000}.tabs input[name=tab-control]:nth-of-type(3):checked~ul>li:nth-child(3)>label svg{fill:#428bff}@media (max-width:1250px){.tabs input[name=tab-control]:nth-of-type(3):checked~ul>li:nth-child(3)>label{background:rgba(0,0,0,.08)}}.tabs input[name=tab-control]:nth-of-type(3):checked~.slider{-webkit-transform:translateX(200%);transform:translateX(200%)}.tabs input[name=tab-control]:nth-of-type(3):checked~.content>section:nth-child(3){display:block}.tabs input[name=tab-control]:nth-of-type(4):checked~ul>li:nth-child(4)>label{cursor:default;font-weight:700;color:#000}.tabs input[name=tab-control]:nth-of-type(4):checked~ul>li:nth-child(4)>label svg{fill:#428bff}@media (max-width:1250px){.tabs input[name=tab-control]:nth-of-type(4):checked~ul>li:nth-child(4)>label{background:rgba(0,0,0,.08)}}.tabs input[name=tab-control]:nth-of-type(4):checked~.slider{-webkit-transform:translateX(300%);transform:translateX(300%)}.tabs input[name=tab-control]:nth-of-type(4):checked~.content>section:nth-child(4){display:block}.tabs input[name=tab-control]:nth-of-type(5):checked~ul>li:nth-child(5)>label{cursor:default;font-weight:700;color:#000}.tabs input[name=tab-control]:nth-of-type(5):checked~ul>li:nth-child(5)>label svg{fill:#428bff}@media (max-width:1250px){.tabs input[name=tab-control]:nth-of-type(5):checked~ul>li:nth-child(5)>label{background:rgba(0,0,0,.08)}}.tabs input[name=tab-control]:nth-of-type(5):checked~.slider{-webkit-transform:translateX(400%);transform:translateX(400%)}.tabs input[name=tab-control]:nth-of-type(5):checked~.content>section:nth-child(5){display:block}@-webkit-keyframes content{from{opacity:0;-webkit-transform:translateY(5%);transform:translateY(5%)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes content{from{opacity:0;-webkit-transform:translateY(5%);transform:translateY(5%)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@media (max-width:1250px){.tabs ul li label{white-space:initial}.tabs ul li label br{display:initial}.tabs ul li label svg{height:1.5em}}@media (max-width:1250px){.tabs ul li label{padding:5px;border-radius:5px}.tabs ul li label span{display:none}.tabs .slider{display:none}.tabs .content{margin-top:20px}.tabs .content section h2{display:block}}@media (max-width:769px){.tabs{padding-bottom:25rem}}@media (max-width:450px){.tabs{padding-bottom:35rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xvY2FsX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwic3R5bGUuY3NzIiwiY29tbW9uL2dsb2JhbC5zY3NzIiwidXRpbHMvdmFyaWFibGVzLnNjc3MiLCJ1dGlscy9mb250cy5zY3NzIiwiY29tbW9uL2hlYWRlci5zY3NzIiwiY29tbW9uL2Zvb3Rlci5zY3NzIiwiY29tbW9uL3RhYi5zY3NzIiwibWl4aW5zL3RhYi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQ1VBLEtERWtDLFlBQU8sS0FHekMseUJBQUEsS0FlQSxLQUNFLE9BQUEsRUNDRixLRFNFLFFBQUEsTUFXRixHQUNFLFVBQUEsSUFBeUIsT0FBQSxNQUFBLEVDQzNCLEdEVXFDLFdBQUEsWUFDbkIsT0FBTyxFQUd6QixTQUFBLFFDQUEsSUFDRSxLQUFNLElBQUksU0FBUyxDQUFFLFVBWXZCLEVBQUUsV0FBQSxJQVNGLFlEY0EsY0FBQSxLQ1hFLGdCQUFpQixVRGNrQix3QkFBQSxVQUFBLE9BQ25DLGdCQUFjLFVBQUEsT0NKaEIsRURlQSxPQ2JFLFlBQWEsT0FRZixLQUNBLElEaUJBLEtBQ0UsS0FBQSxJQUFBLFNBQWUsQ0FBQSxVQ1BqQixNRHFCQSxVQUFBLElDWkEsSUR3QkEsSUN0QkUsVUFBVyxJQUNYLFlBQWEsRUFDYixTQUFVLFNBQ1YsZUFBZ0IsU0FHbEIsSURzQm1CLE9BQUEsT0NsQm5CLElEb0JhLElBQUEsTUNUYixJRHNCQSxhQUFBLEtDVkEsT0R3QkEsTUN0QkEsU0FDQSxPQUNBLFNEd0JFLEtBQUEsSUFBQSxDQUFBLEtBQUEsUUNwQkEsT0FBQSxFQVVGLE9BQ0EsTUFFRSxTQUFVLFFEcUNaLE9DNUJBLE9EZ0NBLGVBQUEsS0N0QkEsY0FDQSxhQUNBLGNBSEEsT0RpQ0UsbUJBQWMsT0NyQmhCLGdDRDJCQSwrQkN6QkEsZ0NBSEEseUJBR0UsYUFBQSxLRDZCRixRQUFBLEVDbkJBLDZCRCtCQSw0QkM3QkEsNkJBSEEsc0JBSUUsUUFBUyxJQUFJLE9BQU8sV0FPdEIsU0FDRSxRQUFTLE1BQU8sTUFBTyxPQVV6QixPQUFFLFdBQUEsV0RvQ0EsTUFBQSxRQUNBLFFBQUEsTUM5QkEsVUFBVyxLQUVYLFFBQVMsRUFDWCxZQUFBLE9BU0EsU0RtQzhCLGVBQUEsU0MzQjlCLFNBQUUsU0FBQSxLQVNGLGdCQUNBLGFEd0NBLFdBQUEsV0FHQSxRQUFBLEVDaENBLHlDQUFBLHlDRDZDRSxPQUFBLEtDbkNGLGNBQ0UsbUJBQW9CLFVBRXBCLGVBQWdCLEtBUWxCLHlDQ2hUQSxtQkFBQSxLRHlUQSw2QkFDRSxtQkFBb0IsT0M1U3BCLEtBQUEsUUR5VEYsUUUxVkEsUUFBQSxNRmtXQSxRRy9WRSxRQUFBLFVDR0YsU0FDRSxRQUFBLEtKOFdGLFNBQ0UsUUl0V1MsS0ptWFgsRUFFQSxRQURBLFNBRUUsV0lsV0UsUUpxV0osS0FDRSxXSWpXSSxXSmtXSixZSWpXSSxVRmxDUyxDQUFBLEtBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLFdGb1liLFlJaldJLElBckNOLFdBQUEsT0p3WUUsZUk5VkUsT0orVkYsZ0JJOVZjLE9KaVdoQixLQUNFLE9JN1ZJLEVKOFZKLFFJN1ZJLEtBQUEsRUpnV04sSUFDRSxVSXhWRSxLSjJWSixFQUNFLGdCSXhWRSxLSjJWSixLQUNFLE9JdlZJLEtBQUEsRUFBQSxLQUFBLEVKMFZOLGlCQUNFLFFJeFZJLEVBQUEsUUoyVk4seUJBQ0UsS0FDRSxPSXhWRSxFSnlWRixRSXhWRSxLQUFBLEVBQUEsRUFBQSxFSjJWSixpQkl2YUYsUUFBQSxFQUFBLE1Kc2JBLFdBQ0UsWUlqVkksV0prVkosSUl4YkYsbUNKeWJFLElBQUssMENJaFYyQiwyQkFBQSxDQUFBLHFDQUFBLGVBQUEsQ0FBQSxvQ0FBQSxjQUFBLENBQUEsbUNBQUEsa0JBQUEsQ0FBQSxvREFBQSxjSmlWaEMsWUloVk0sSUppVk4sV0loVk0sT0ppVk4sYUloVmEsS0o2VmYsT0FDRSxPSTFjRixtQko2Y0EsZUFDRSxXSTFVTSxzQkFBZSxFQUFBLENBQUEsQ0FBQSxNQUFBLFFKMlVyQixRQUFTLEdJclVYLFNBQUEsU0FDRSxJQUFBLEVKdVVBLEtJclVJLEVKc1VKLE1BQU8sS0lqVVQsT0FBQSxNQUNFLFFBQUEsR0pxVUYsY0FDRSxXSXRVQSxRSnVVQSxRSTlUTSxHSitUTixTSTlUTSxTSitUTixJSTlUTSxFSitUTixLSTFVQSxFSjJVQSxNSTVUTSxLQWZOLE9BQUEsTUo2VUEsUUl6VEksR0FwQkosUUFBQSxHSmlWRixXSWpWRSxXQUFBLE1KbVZBLGFJalRRLEtBbENSLFlBQUEsSUpxVkEsVUkvU1EsS0prVFYsYUFDRSxlSXpTaUIsVUFGakIsTUFBQSxLSjZTQSxRSXZTSSxFQUFBLE9KMFNOLHNCQUNFLFFJblNJLE1BQVEsRUFkWixNQUFBLE1KbVRBLE1JaFNNLEtKbVNSLHlCQUNFLFVJL1JJLE9KZ1NKLFlBQWEsT0kzUmYsY0FBQSxPSitSQSx5QkFDRSxVSXpSSSxRSjRSTix1QkFDRSxXSW5STSxLQWhCTixTQUFBLFNKcVNBLEtJclJNLEVKc1JOLFFBQVMsT0FBTyxLSzNnQmxCLGNBQUEsRUFBQSxNQUFBLE1BQUEsRUFDRSxNQUFBLEtMK2dCRiw4QktoaEJBLFdBQUEsUUxraEJFLFFLemdCRSxHTDBnQkYsU0t6Z0JFLFNMMGdCRixNS3pnQkUsUUwwZ0JGLElLemdCRSxJTDBnQkYsa0JLemdCRSxxQkwwZ0JGLFVLdmhCRixxQkx3aEJFLFFLeGdCSSxHTHlnQkosTUt6aEJGLEtMMGhCRSxPS3RnQkksS0FwQk4sY0FBQSxFQUFBLE9BQUEsT0FBQSxFTDRoQkUsbUJLbmdCRSxJQUFhLEdBQUEsU0xvZ0JmLFdLcGdCRSxJQUFhLEdBQUEsU0x1Z0JqQixvQ0FDRSxNS2ppQkYsUUxvaUJBLDRCQUNFLFVLcGdCSSxRTHFnQkosWUtyZ0JJLElMd2dCTixjQUNFLFFLamdCSSxLTGtnQkosc0JLamdCcUIsSUFBQSxJQUFBLElMa2dCckIsbUJLamdCSSxLTGtnQkosZ0JLamdCSSxLTGtnQkosV0tqZ0JJLEtMa2dCSixNS2xnQkksT0xtZ0JKLFlLaGpCRixLTG1qQkEsOEJBQ0UsU0s5Zk0sU0F0RFIsUUFBQSxRQUFBLEtMc2pCRSxNSzFmRSxLTDJmRixrQksxZmtCLEtMNmZwQixzQ0sxakJBLFFBQUEsSUFBQSxjTDRqQkUsU0t0ZkUsU0x1ZkYsSUt2ZkUsU0x3ZkYsS0t2ZkUsRUx3ZkYsTUt4ZkUsS0x5ZkYsY0t6ZkUsT0FBQSxLQUFzQixNTDBmeEIsVUt6ZkUsS0w0ZkoscUNBQ0UsV0t4ZkUsS0x5ZkYsUUt4ZlMsR0x5ZlQsU0t4ZkUsU0EvRUosSUFBQSxFTHlrQkUsS0t0ZkUsRUx1ZkYsTUt0ZkUsS0x1ZkYsT0t0ZkUsS0x1ZkYsUUt0ZkUsR0F0RkosUUFBQSxHTGdsQkEsZ0NBQ0UsWUtsZkUsSUxtZkYsVUtsZkUsT0xxZkosbUNBQ0UsVUtqZkksS0xvZk4sMEJLM2VBLHNCQUNFLFFBQUEsS0FBQSxHTGdmRiwwQkFDRSxXQUNFLGFLeGVJLEtBVk4sc0JBb0JNLFFBQUEsS0FBVyxFQXBCakIseUJBMEJNLFVBQUEsS0ExQk4sWUFBQSxPQWdDTSxjQUFBLE9MK2ROLHlCS3JkRixVQUFBLE9MeWRFLHFCQUNFLFFBQVMsS0FHWCx1Qks1ZEEsUUFBQSxLQUFBLEtMZ2VBLDhCQUNFLE9BQVEsT0V0bUJaLGdDQUtBLFVBQUEsS0FuQkEsbUNBY0EsVUFBQSxPRmtuQkEseUJNam9CRSxXQUNBLFFBQUEsS05xb0JBLHNCTWpvQkUsTUFBQSxLTnFvQkYscUJNbm9CRSxRQUFBLE1OdW9CRix1Qk1yb0JFLE9BQUEsTU55b0JGLHNDTXBwQkYsT0FBQSxNTndwQkUsc0NBQ0UsT010b0JFLE1OeW9CSixjQUNFLFFNN3BCSixNTmlxQkEseUJBQ0UsZUFDRSxpQk14b0JJLDRCTjJvQk4sc0JBQ0UsUU14b0JJLEVOMm9CTix1QkFDRSxPTXpvQkksTU40b0JOLHNDQUNFLE9NM29CSSxLTjhvQk4sc0NBQ0UsT016b0JNLE1ONm9CVixPTXZyQkEsUUFBQSxLTnlyQkUsc0JNbG9Cb0IsSUFBQSxJTnFvQnRCLHlCTTVyQkEsWUFBQSxJTmdzQkEsVUFDRSxPTWpvQkUsRU5rb0JGLFlFOXFCb0IsS0YrcUJwQixVTWpvQkUsS05rb0JGLFlNam9CRSxRQW5FSixlQUFBLFVOd3NCQSx3QkFDRSxZTTluQkksS05pb0JOLHVCQUNFLFlNL25CTSxLTmtvQlIsdUJBQ0UsUU1qb0JNLFlOa29CTixRTWpvQk0sS05rb0JOLGlCTWxvQk0sT05tb0JOLGdCTXB0QkYsT05xdEJFLFdNaG9CTSxLTm1vQlIscUNBQ0UsTUFBTyxLQUNQLE9NL25CUSxLTmdvQlIsUU0vbkJRLEtOZ29CUixtQk0vbkJtQixJQUFBLElBQUEsWU5nb0JuQixXTS9uQlEsSUFBQSxJQUFBLFlOa29CVixrQ0FDRSxhTTFuQkUsTUFBYSxLQUFBLE1ONm5CakIsNEJBQ0UsTU14bkJNLEtOeW5CTixVTXR1QkYsT051dUJFLE9Ndm5CUSxLQUFBLEVBQUEsS0p2R0ksS0YrdEJaLGNNcm5CTSxNQUFBLE1BQUEsWU5zbkJOLG1CTXp1QkYsSUFBQSxJQUFBLFlOMHVCRSxXTXRuQlEsSUFBQSxJQUFBLFlOeW5CViwyQ0FDRSxlTTl1QkYsWUFBQSxXQUFBLGVBQUEsa0JBQUEsZ0JBQUEsY04rdUJFLE9PanVCTSxZQUFjLFdBQUEsZUFBQSxrQkFBQSxnQkFBQSxjUG91QnRCLGtDQUNFLGFNdG9CTSxLTnlvQlIsc0JBQ0UsU012dkJGLFNOd3ZCRSxVTXBvQlEsTU5xb0JSLFFNenZCRixLTjR2QkEsMEJBQ0UsT08vdUJNLEtBQUEsS0FBYyxNUGt2QnRCLDBCQUNFLFFNcHBCTSxZTnFwQk4sUU1sd0JGLEtObXdCRSxtQkUxdkJZLFNGMnZCWixzQk1qcEJNLE9Oa3BCTixlTXJ3QkYsT05zd0JFLGlCTWxwQlEsT05tcEJSLGdCTXZ3QkYsT04wd0JBLGNBQ0UsU083dkJNLFNQOHZCTixPTTV3QkYsTU42d0JFLEtNbHFCTSxFTm1xQk4sUU1scUJNLEVOcXFCUixhQUNFLFNNL3BCTSxTTmdxQk4sSUFBSyxFQUNMLE1BQU8sRUFDUCxRTXJ4QkYsR053eEJBLGlDQUNFLFFPM3dCTSxLUDh3QlIsZUFDRSxRTWhyQk0sTU5pckJOLFFNOXhCRixLTit4QkUsTU0vcUJRLEtOZ3JCUixXTTdxQk0sTU44cUJOLFVNanlCRixPTm95QkEsb0JBQ0UsWU8zeEJNLE1QOHhCUiwwQk05cUJFLGdCQUFBLFVOa3JCRix5QkFDRSx5Qk03cUJFLFlBQUEsSU5pckJGLFVBQ0UsWUFBYSxLTXhyQmYsVUFBQSxLTjRyQkEsd0JNenJCSSxZQUFBLEtONnJCSix1Qk14ckJJLFlBQUEsS040ckJKLHFDQUNFLE1NL3pCSixLTmcwQkksT01yckJJLEtOc3JCSixRTWowQkosS05vMEJFLDRCQUNFLE9NL3FCRSxLQUFBLEVBQVksS0FBQSxLTmtyQmhCLDBCTXgwQkYsT0FBQSxPQUFBLEtBQUEsTU40MEJFLGNBQ0UsTU03MEJKLE9OaTFCQSx5QkFDRSxPQUNFLFFBQVMsTUFHWCwwQkFDQSxzQkFDRSxRQUFTLEtBR1gsd0JBQ0EsdUJBQ0UsWUFBYSxFQUdmLGlDQUNFLFFBQVMsTUFHWCxlQUNFLFlBQWEsTUF3QmpCLE1BQ0UsU0FBVSxTQUNWLGVBQWdCLE1BQ2hCLE9BQVEsTUFDUixVQUFXLE1BR2Isb0JBQ0UsV0FBWSxLQUNaLFFBQVMsWUFDVCxRQUFTLEtBQ1QsbUJBQW9CLFdBQ3BCLHNCQUF1QixPQUN2QixlQUFnQixJQUNoQixpQkFBa0IsUUFDbEIsZ0JBQWlCLGNBQ2pCLGtCQUFtQixJQUNuQixZQUFhLFNBQ2IsVUFBVyxLQUNYLGFBQWMsRUFDZCxjQUFlLEVBR2pCLHVCQUNFLFdBQVksV0FDWixpQkFBa0IsRUFDbEIsS0FBTSxFQUNOLE1BQU8sSUFDUCxXQUFZLE9BQ1osU0FBVSxTQUNWLElBQUssSUFHUCw2QkFDRSxRQUFTLFlBQ1QsUUFBUyxLQUNULGtCQUFtQixPQUNuQixZQUFhLE9BQ2IsaUJBQWtCLE9BQ2xCLGdCQUFpQixPQUNqQixVQUFXLEtBQ1gsUUFBUyxLQUFLLEVBQ2QsU0FBVSxPQUNWLGNBQWUsU0FDZixPQUFRLFFBQ1IsbUJBQW9CLElBQUksSUFBSyxZQUM3QixXQUFZLElBQUksSUFBSyxZQUNyQixZQUFhLE9BQ2Isc0JBQXVCLEtBQ3ZCLG9CQUFxQixLQUNyQixpQkFBa0IsS0FDbEIsZ0JBQWlCLEtBQ2pCLFlBQWEsS0FLZixvQ0FEQSxtQ0FEQSxtQ0FHRSxRQUFTLEVBQ1QsTUFBTyxRQUdULGlDQUNFLE1BQU8sUUFDUCxPQUFRLFFBQ1IsT0FBUSxFQUFFLE1BR1osY0FDRSxTQUFVLFNBQ1YsTUFBTyxJQUNQLG1CQUFvQixJQUFJLEtBQU0sOEJBQzlCLFdBQVksSUFBSSxLQUFNLDhCQUd4QixpQkFDRSxTQUFVLFNBQ1YsTUFBTyxLQUNQLFVBQVcsS0FDWCxPQUFRLEVBQUUsS0FDVixPQUFRLElBQ1IsV0FBWSxRQUNaLGNBQWUsSUFHakIsZUFDRSxXQUFZLEtBR2QsdUJBQ0UsUUFBUyxLQUNULFlBQWEsSUFDYix1QkFBd0IsUUFDeEIsZUFBZ0IsUUFDaEIsNEJBQTZCLE9BQzdCLG9CQUFxQixPQUNyQiwyQkFBNEIsSUFDNUIsbUJBQW9CLElBQ3BCLGtDQUFtQyxZQUNuQywwQkFBMkIsWUFDM0Isa0NBQW1DLEVBQ25DLDBCQUEyQixFQUc3QiwwQkFDRSxNQUFPLFFBQ1AsUUFBUyxLQUdYLGlDQUNFLFFBQVMsR0FDVCxTQUFVLFNBQ1YsUUFBUyxNQUNULE1BQU8sS0FDUCxPQUFRLElBQ1IsV0FBWSxRQUNaLFdBQVksSUFDWixLQUFNLElBR1IsOEJBQ0UsUUFBUyxLQUdYLDhFQUNFLE9BQVEsUUFDUixZQUFhLElBQ2IsTUFBTyxLQUdULGtGQUNFLEtBQU0sUUFHUiwwQkFDRSw4RUFDRSxXQUFZLGlCQUloQiw2REFDRSxrQkFBbUIsY0FDbkIsVUFBVyxjQUdiLG1GQUNFLFFBQVMsTUFHWCw4RUFDRSxPQUFRLFFBQ1IsWUFBYSxJQUNiLE1BQU8sS0FHVCxrRkFDRSxLQUFNLFFBR1IsMEJBQ0UsOEVBQ0UsV0FBWSxpQkFJaEIsNkRBQ0Usa0JBQW1CLGlCQUNuQixVQUFXLGlCQUdiLG1GQUNFLFFBQVMsTUFHWCw4RUFDRSxPQUFRLFFBQ1IsWUFBYSxJQUNiLE1BQU8sS0FHVCxrRkFDRSxLQUFNLFFBR1IsMEJBQ0UsOEVBQ0UsV0FBWSxpQkFJaEIsNkRBQ0Usa0JBQW1CLGlCQUNuQixVQUFXLGlCQUdiLG1GQUNFLFFBQVMsTUFHWCw4RUFDRSxPQUFRLFFBQ1IsWUFBYSxJQUNiLE1BQU8sS0FHVCxrRkFDRSxLQUFNLFFBR1IsMEJBQ0UsOEVBQ0UsV0FBWSxpQkFJaEIsNkRBQ0Usa0JBQW1CLGlCQUNuQixVQUFXLGlCQUdiLG1GQUNFLFFBQVMsTUFHWCw4RUFDRSxPQUFRLFFBQ1IsWUFBYSxJQUNiLE1BQU8sS0FHVCxrRkFDRSxLQUFNLFFBR1IsMEJBQ0UsOEVBQ0UsV0FBWSxpQkFJaEIsNkRBQ0Usa0JBQW1CLGlCQUNuQixVQUFXLGlCQUdiLG1GQUNFLFFBQVMsTUFHWCwyQkFDRSxLQUNFLFFBQVMsRUFDVCxrQkFBbUIsZUFDbkIsVUFBVyxlQUdiLEdBQ0UsUUFBUyxFQUNULGtCQUFtQixjQUNuQixVQUFXLGVBSWYsbUJBQ0UsS0FDRSxRQUFTLEVBQ1Qsa0JBQW1CLGVBQ25CLFVBQVcsZUFHYixHQUNFLFFBQVMsRUFDVCxrQkFBbUIsY0FDbkIsVUFBVyxlQUlmLDBCQUNFLGtCQUNFLFlBQWEsUUFHZixxQkFDRSxRQUFTLFFBR1gsc0JBQ0UsT0FBUSxPQUlaLDBCQUNFLGtCQUNFLFFBQVMsSUFDVCxjQUFlLElBR2pCLHVCQUNFLFFBQVMsS0FHWCxjQUNFLFFBQVMsS0FHWCxlQUNFLFdBQVksS0FHZCwwQkFDRSxRQUFTLE9BSWIseUJBQ0UsTUFDRSxlQUFnQixPQUlwQix5QkFDRSxNQUNFLGVBQWdCIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogUmVzcG9uc2l2ZSBicmVha3BvaW50cyAqL1xuLyogY29sb3JzICovXG4vKiB0YWIgc2V0dGluZyAqL1xuLyogYnJlYWtwb2ludHMgKi9cbi8qIHNlbGVjdG9ycyByZWxhdGl2ZSB0byByYWRpbyBpbnB1dHMgKi9cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJBcmlhbFwiLCBcIlZlcmRhbmFcIiwgXCJUYWhvbWFcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMC4wN3JlbTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogNHJlbSAwOyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbm1haW4ge1xuICBtYXJnaW46IDRyZW0gMCAycmVtIDA7IH1cblxuLnBhZGRpbmctd3JhcHBlciB7XG4gIHBhZGRpbmc6IDAgNS4yNXJlbTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDRyZW0gMCAwIDA7IH1cbiAgLnBhZGRpbmctd3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxcmVtOyB9IH1cblxuLyogUmVzcG9uc2l2ZSBicmVha3BvaW50cyAqL1xuLyogY29sb3JzICovXG4vKiB0YWIgc2V0dGluZyAqL1xuLyogYnJlYWtwb2ludHMgKi9cbi8qIHNlbGVjdG9ycyByZWxhdGl2ZSB0byByYWRpbyBpbnB1dHMgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTW9udHNlcnJhdC1MaWdodC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTW9udHNlcnJhdC1MaWdodC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvTW9udHNlcnJhdC1MaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTGlnaHQuc3ZnI01vbnRzZXJyYXQtTGlnaHRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDsgfVxuXG4vKiBSZXNwb25zaXZlIGJyZWFrcG9pbnRzICovXG4vKiBjb2xvcnMgKi9cbi8qIHRhYiBzZXR0aW5nICovXG4vKiBicmVha3BvaW50cyAqL1xuLyogc2VsZWN0b3JzIHJlbGF0aXZlIHRvIHJhZGlvIGlucHV0cyAqL1xuaGVhZGVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNHJlbSk7IH1cbiAgaGVhZGVyOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFkMTkxODtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvbWFpbi5qcGVnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgei1pbmRleDogLTI7IH1cbiAgaGVhZGVyOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWQxOTE4O1xuICAgIHotaW5kZXg6IC0xO1xuICAgIG9wYWNpdHk6IDAuNDsgfVxuICBoZWFkZXIgbmF2IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBtYXJnaW4tcmlnaHQ6IDdyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxOHB4OyB9XG4gICAgaGVhZGVyIG5hdiBhIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIHBhZGRpbmc6IDAgMS41cmVtOyB9XG4gIGhlYWRlciAuaGVhZGVyX190aXRsZSB7XG4gICAgcGFkZGluZzogMTFyZW0gMDtcbiAgICB3aWR0aDogMzRyZW07XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgICBoZWFkZXIgLmhlYWRlcl9fdGl0bGUgaDEge1xuICAgICAgZm9udC1zaXplOiAyLjNyZW07XG4gICAgICBsaW5lLWhlaWdodDogMi41cmVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNC41cmVtOyB9XG4gICAgaGVhZGVyIC5oZWFkZXJfX3RpdGxlIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsgfVxuICBoZWFkZXIgLmhlYWRlcl9fYW5jaG9yIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBwYWRkaW5nOiAxLjVyZW0gNXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAwIDAuNHJlbSAwLjRyZW0gMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgaGVhZGVyIC5oZWFkZXJfX2FuY2hvcjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAtMy41cmVtO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgd2lkdGg6IDVyZW07XG4gICAgICBoZWlnaHQ6IDNyZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAwIDAuMjVyZW0gMC4yNXJlbSAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZWZkNTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxcyBlYXNlLW91dDsgfVxuICAgIGhlYWRlciAuaGVhZGVyX19hbmNob3I6aG92ZXI6OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiAtNC41cmVtOyB9XG4gICAgaGVhZGVyIC5oZWFkZXJfX2FuY2hvciBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIGhlYWRlciAuY2FyZHMge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICBjb2x1bW4tZ2FwOiA1MHB4O1xuICAgIHdpZHRoOiA2Ni42NiU7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cbiAgICBoZWFkZXIgLmNhcmRzIC5jYXJkc19fZWxlbWVudCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAxLjc1cmVtIDFyZW07XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGNvdW50ZXItaW5jcmVtZW50OiBpbnN0OyB9XG4gICAgICBoZWFkZXIgLmNhcmRzIC5jYXJkc19fZWxlbWVudDo6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCIwXCIgY291bnRlcihpbnN0KTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC0zLjI1cmVtO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMC4yNXJlbSAjZmZmZmZmIHNvbGlkO1xuICAgICAgICBmb250LXNpemU6IDJyZW07IH1cbiAgICAgIGhlYWRlciAuY2FyZHMgLmNhcmRzX19lbGVtZW50OjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgb3BhY2l0eTogMC44OyB9XG4gICAgICBoZWFkZXIgLmNhcmRzIC5jYXJkc19fZWxlbWVudCBwIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9XG4gICAgICBoZWFkZXIgLmNhcmRzIC5jYXJkc19fZWxlbWVudCBzcGFuIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHtcbiAgaGVhZGVyIC5oZWFkZXJfX3RpdGxlIHtcbiAgICBwYWRkaW5nOiA3cmVtIDA7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTM2N3B4KSB7XG4gIGhlYWRlciBuYXYge1xuICAgIG1hcmdpbi1yaWdodDogNXJlbTsgfVxuICBoZWFkZXIgLmhlYWRlcl9fdGl0bGUge1xuICAgIHBhZGRpbmc6IDlyZW0gMDsgfVxuICAgIGhlYWRlciAuaGVhZGVyX190aXRsZSBoMSB7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBsaW5lLWhlaWdodDogMi4ycmVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMi41cmVtOyB9XG4gICAgaGVhZGVyIC5oZWFkZXJfX3RpdGxlIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4xcmVtOyB9XG4gIGhlYWRlciAucGhvbmUtYW5jaG9yIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIGhlYWRlciAuaGVhZGVyX19hbmNob3Ige1xuICAgIHBhZGRpbmc6IDFyZW0gM3JlbTsgfVxuICAgIGhlYWRlciAuaGVhZGVyX19hbmNob3I6OmFmdGVyIHtcbiAgICAgIGhlaWdodDogMi41cmVtOyB9XG4gIGhlYWRlciAuY2FyZHMgLmNhcmRzX19lbGVtZW50IHAge1xuICAgIGZvbnQtc2l6ZTogMXJlbTsgfVxuICBoZWFkZXIgLmNhcmRzIC5jYXJkc19fZWxlbWVudCBzcGFuIHtcbiAgICBmb250LXNpemU6IDAuOXJlbTsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjlweCkge1xuICBoZWFkZXIgbmF2IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIGhlYWRlciAuaGVhZGVyX190aXRsZSB7XG4gICAgd2lkdGg6IGF1dG87IH1cbiAgaGVhZGVyIC5waG9uZS1hbmNob3Ige1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIGhlYWRlciAuaGVhZGVyX19hbmNob3Ige1xuICAgIGJvdHRvbTogMjRyZW07IH1cbiAgaGVhZGVyIC5oZWFkZXJfX2FuY2hvcjpudGgtb2YtdHlwZSgyKSB7XG4gICAgYm90dG9tOiAxOXJlbTsgfVxuICBoZWFkZXIgLmhlYWRlcl9fYW5jaG9yOm50aC1vZi10eXBlKDMpIHtcbiAgICBib3R0b206IDE0cmVtOyB9XG4gIGhlYWRlciAuY2FyZHMge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgaGVhZGVyOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9tYWluLW1vYmlsZS5qcGdcIik7IH1cbiAgaGVhZGVyIC5oZWFkZXJfX3RpdGxlIHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIGhlYWRlciAuaGVhZGVyX19hbmNob3Ige1xuICAgIGJvdHRvbTogMTFyZW07IH1cbiAgaGVhZGVyIC5oZWFkZXJfX2FuY2hvcjpudGgtb2YtdHlwZSgyKSB7XG4gICAgYm90dG9tOiA2cmVtOyB9XG4gIGhlYWRlciAuaGVhZGVyX19hbmNob3I6bnRoLW9mLXR5cGUoMykge1xuICAgIGJvdHRvbTogMXJlbTsgfSB9XG5cbmZvb3RlciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjsgfVxuICBmb290ZXIgLmhlYWRlci1jb250YWluZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgZm9vdGVyIGgyIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbGluZS1oZWlnaHQ6IDNyZW07XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBmb290ZXIgaDI6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMnJlbTsgfVxuICAgIGZvb3RlciBoMjpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDRyZW07IH1cbiAgZm9vdGVyIC5jb250YWN0LW51bWJlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAycmVtOyB9XG4gICAgZm9vdGVyIC5jb250YWN0LW51bWJlciAuY29udGFjdC1pY29uIHtcbiAgICAgIHdpZHRoOiA5cmVtO1xuICAgICAgaGVpZ2h0OiA5cmVtO1xuICAgICAgcGFkZGluZzogM3JlbTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0OyB9XG4gICAgZm9vdGVyIC5jb250YWN0LW51bWJlciAuc2VwYXJhdG9yIHtcbiAgICAgIGJvcmRlci1yaWdodDogMC4xcmVtICMwMDAwMDAgc29saWQ7IH1cbiAgICBmb290ZXIgLmNvbnRhY3QtbnVtYmVyIHNwYW4ge1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgIG1hcmdpbjogYXV0byAwIGF1dG8gM3JlbTtcbiAgICAgIGJvcmRlci1ib3R0b206IDAuMXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0OyB9XG4gICAgZm9vdGVyIC5jb250YWN0LW51bWJlcjpob3ZlciAuY29udGFjdC1pY29uIHtcbiAgICAgIGZpbHRlcjogaW52ZXJ0KDM4JSkgc2VwaWEoOTUlKSBzYXR1cmF0ZSgzOTMlKSBodWUtcm90YXRlKDg3ZGVnKSBicmlnaHRuZXNzKDk0JSkgY29udHJhc3QoODMlKTsgfVxuICAgIGZvb3RlciAuY29udGFjdC1udW1iZXI6aG92ZXIgc3BhbiB7XG4gICAgICBib3JkZXItY29sb3I6ICMwMDAwMDA7IH1cbiAgZm9vdGVyIC5pbWctY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWF4LXdpZHRoOiA0MHJlbTtcbiAgICBwYWRkaW5nOiA1cmVtOyB9XG4gICAgZm9vdGVyIC5pbWctY29udGFpbmVyIGltZyB7XG4gICAgICBib3JkZXI6IDFyZW0gIzAwMDAwMCBzb2xpZDsgfVxuICBmb290ZXIgLmNvbnRhY3QtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgZm9vdGVyIC5mcm9udCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTByZW07XG4gICAgbGVmdDogMDtcbiAgICB6LWluZGV4OiAyOyB9XG4gIGZvb3RlciAuYmFjayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAtMTsgfVxuICBmb290ZXIgLm1vYmlsZS1jb250YWN0LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICBmb290ZXIgLmF1dGhvciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgICBmb290ZXIgLmF1dGhvciBzcGFuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjVyZW07IH1cbiAgICAgIGZvb3RlciAuYXV0aG9yIHNwYW46aG92ZXIge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgZm9vdGVyIC5oZWFkZXItY29udGFpbmVyIHtcbiAgICBtYXJnaW4tbGVmdDogMTAlOyB9XG4gIGZvb3RlciBoMiB7XG4gICAgbGluZS1oZWlnaHQ6IDJyZW07XG4gICAgZm9udC1zaXplOiAycmVtOyB9XG4gICAgZm9vdGVyIGgyOmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07IH1cbiAgICBmb290ZXIgaDI6bGFzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAycmVtOyB9XG4gIGZvb3RlciAuY29udGFjdC1udW1iZXIgLmNvbnRhY3QtaWNvbiB7XG4gICAgd2lkdGg6IDVyZW07XG4gICAgaGVpZ2h0OiA1cmVtO1xuICAgIHBhZGRpbmc6IDFyZW07IH1cbiAgZm9vdGVyIC5jb250YWN0LW51bWJlciBzcGFuIHtcbiAgICBtYXJnaW46IGF1dG8gMCBhdXRvIDFyZW07IH1cbiAgZm9vdGVyIC5pbWctY29udGFpbmVyIGltZyB7XG4gICAgYm9yZGVyOiAwLjI1cmVtICMwMDAwMDAgc29saWQ7IH1cbiAgZm9vdGVyIC5mcm9udCB7XG4gICAgd2lkdGg6IDEwcmVtOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gIGZvb3RlciB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICBmb290ZXIgLmNvbnRhY3QtY29udGFpbmVyLFxuICAgIGZvb3RlciAuaW1nLWNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgZm9vdGVyIGgyOmZpcnN0LW9mLXR5cGUsIGZvb3RlciBoMjpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICBmb290ZXIgLm1vYmlsZS1jb250YWN0LWNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIGZvb3RlciAuYXV0aG9yIHtcbiAgICAgIHBhZGRpbmctdG9wOiA1cmVtOyB9IH1cblxuLyogUmVzcG9uc2l2ZSBicmVha3BvaW50cyAqL1xuLyogY29sb3JzICovXG4vKiB0YWIgc2V0dGluZyAqL1xuLyogYnJlYWtwb2ludHMgKi9cbi8qIHNlbGVjdG9ycyByZWxhdGl2ZSB0byByYWRpbyBpbnB1dHMgKi9cbi8qIFJlc3BvbnNpdmUgYnJlYWtwb2ludHMgKi9cbi8qIGNvbG9ycyAqL1xuLyogdGFiIHNldHRpbmcgKi9cbi8qIGJyZWFrcG9pbnRzICovXG4vKiBzZWxlY3RvcnMgcmVsYXRpdmUgdG8gcmFkaW8gaW5wdXRzICovXG4udGFicyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDIwcmVtO1xuICBoZWlnaHQ6IDI1MHB4O1xuICBtaW4td2lkdGg6IDMwMHB4OyB9XG4gIC50YWJzIC50YWJzX19oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7IH1cbiAgICAudGFicyAudGFic19faGVhZGVyIGxpIHtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBmbGV4OiAxO1xuICAgICAgd2lkdGg6IDIwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogNHB4OyB9XG4gICAgICAudGFicyAudGFic19faGVhZGVyIGxpIGxhYmVsIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgcGFkZGluZzogMTRweCAwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuICAgICAgICAudGFicyAudGFic19faGVhZGVyIGxpIGxhYmVsOmhvdmVyLCAudGFicyAudGFic19faGVhZGVyIGxpIGxhYmVsOmZvY3VzLCAudGFicyAudGFic19faGVhZGVyIGxpIGxhYmVsOmFjdGl2ZSB7XG4gICAgICAgICAgb3V0bGluZTogMDtcbiAgICAgICAgICBjb2xvcjogI2JlYzVjZjsgfVxuICAgICAgICAudGFicyAudGFic19faGVhZGVyIGxpIGxhYmVsIGltZyB7XG4gICAgICAgICAgd2lkdGg6IDEuMjVyZW07XG4gICAgICAgICAgaGVpZ2h0OiAxLjI1cmVtO1xuICAgICAgICAgIG1hcmdpbjogMCAwLjVyZW07IH1cbiAgLnRhYnMgLnNsaWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMzNzIGN1YmljLWJlemllcigwLjM4LCAwLjgsIDAuMzIsIDEuMDcpOyB9XG4gIC50YWJzIC5pbmRpY2F0b3Ige1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogNTBweDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OiA0cHg7XG4gICAgYmFja2dyb3VuZDogI2E1OTk4OTtcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7IH1cbiAgLnRhYnMgLmNvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7IH1cbiAgICAudGFicyAuY29udGVudCBzZWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgYW5pbWF0aW9uLW5hbWU6IGNvbnRlbnQ7XG4gICAgICBhbmltYXRpb24tZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICBhbmltYXRpb24tZHVyYXRpb246IDAuM3M7XG4gICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDE7IH1cbiAgICAgIC50YWJzIC5jb250ZW50IHNlY3Rpb24gaDIge1xuICAgICAgICBjb2xvcjogIzQyOGJmZjtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgICAudGFicyAuY29udGVudCBzZWN0aW9uIGgyOjphZnRlciB7XG4gICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzQyOGJmZjtcbiAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAgICAgbGVmdDogMXB4OyB9XG4gIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgxKTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoMSkgPiBsYWJlbCB7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoMSk6Y2hlY2tlZCB+IHVsID4gbGk6bnRoLWNoaWxkKDEpID4gbGFiZWwgc3ZnIHtcbiAgICAgICAgZmlsbDogIzQyOGJmZjsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoMSk6Y2hlY2tlZCB+IHVsID4gbGk6bnRoLWNoaWxkKDEpID4gbGFiZWwge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wOCk7IH0gfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgxKTpjaGVja2VkIH4gLnNsaWRlciB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDEpOmNoZWNrZWQgfiAuY29udGVudCA+IHNlY3Rpb246bnRoLWNoaWxkKDEpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDIpOmNoZWNrZWQgfiB1bCA+IGxpOm50aC1jaGlsZCgyKSA+IGxhYmVsIHtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgyKTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoMikgPiBsYWJlbCBzdmcge1xuICAgICAgICBmaWxsOiAjNDI4YmZmOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTI1MHB4KSB7XG4gICAgICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgyKTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoMikgPiBsYWJlbCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA4KTsgfSB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDIpOmNoZWNrZWQgfiAuc2xpZGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgyKTpjaGVja2VkIH4gLmNvbnRlbnQgPiBzZWN0aW9uOm50aC1jaGlsZCgyKSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgzKTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoMykgPiBsYWJlbCB7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoMyk6Y2hlY2tlZCB+IHVsID4gbGk6bnRoLWNoaWxkKDMpID4gbGFiZWwgc3ZnIHtcbiAgICAgICAgZmlsbDogIzQyOGJmZjsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoMyk6Y2hlY2tlZCB+IHVsID4gbGk6bnRoLWNoaWxkKDMpID4gbGFiZWwge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wOCk7IH0gfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSgzKTpjaGVja2VkIH4gLnNsaWRlciB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwJSk7IH1cbiAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoMyk6Y2hlY2tlZCB+IC5jb250ZW50ID4gc2VjdGlvbjpudGgtY2hpbGQoMykge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoNCk6Y2hlY2tlZCB+IHVsID4gbGk6bnRoLWNoaWxkKDQpID4gbGFiZWwge1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAgICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDQpOmNoZWNrZWQgfiB1bCA+IGxpOm50aC1jaGlsZCg0KSA+IGxhYmVsIHN2ZyB7XG4gICAgICAgIGZpbGw6ICM0MjhiZmY7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjUwcHgpIHtcbiAgICAgICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDQpOmNoZWNrZWQgfiB1bCA+IGxpOm50aC1jaGlsZCg0KSA+IGxhYmVsIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDgpOyB9IH1cbiAgICAudGFicyBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl06bnRoLW9mLXR5cGUoNCk6Y2hlY2tlZCB+IC5zbGlkZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMwMCUpOyB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDQpOmNoZWNrZWQgfiAuY29udGVudCA+IHNlY3Rpb246bnRoLWNoaWxkKDQpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDUpOmNoZWNrZWQgfiB1bCA+IGxpOm50aC1jaGlsZCg1KSA+IGxhYmVsIHtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSg1KTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoNSkgPiBsYWJlbCBzdmcge1xuICAgICAgICBmaWxsOiAjNDI4YmZmOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogMTI1MHB4KSB7XG4gICAgICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSg1KTpjaGVja2VkIH4gdWwgPiBsaTpudGgtY2hpbGQoNSkgPiBsYWJlbCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA4KTsgfSB9XG4gICAgLnRhYnMgaW5wdXRbbmFtZT1cInRhYi1jb250cm9sXCJdOm50aC1vZi10eXBlKDUpOmNoZWNrZWQgfiAuc2xpZGVyIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MDAlKTsgfVxuICAgIC50YWJzIGlucHV0W25hbWU9XCJ0YWItY29udHJvbFwiXTpudGgtb2YtdHlwZSg1KTpjaGVja2VkIH4gLmNvbnRlbnQgPiBzZWN0aW9uOm50aC1jaGlsZCg1KSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuXG5Aa2V5ZnJhbWVzIGNvbnRlbnQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1JSk7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxMjUwcHgpIHtcbiAgICAudGFicyB1bCBsaSBsYWJlbCB7XG4gICAgICB3aGl0ZS1zcGFjZTogaW5pdGlhbDsgfVxuICAgICAgLnRhYnMgdWwgbGkgbGFiZWwgYnIge1xuICAgICAgICBkaXNwbGF5OiBpbml0aWFsOyB9XG4gICAgICAudGFicyB1bCBsaSBsYWJlbCBzdmcge1xuICAgICAgICBoZWlnaHQ6IDEuNWVtOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgIC50YWJzIHVsIGxpIGxhYmVsIHtcbiAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsgfVxuICAgICAgLnRhYnMgdWwgbGkgbGFiZWwgc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAudGFicyAuc2xpZGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAudGFicyAuY29udGVudCB7XG4gICAgICBtYXJnaW4tdG9wOiAyMHB4OyB9XG4gICAgICAudGFicyAuY29udGVudCBzZWN0aW9uIGgyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY5cHgpIHtcbiAgLnRhYnMge1xuICAgIHBhZGRpbmctYm90dG9tOiAyNXJlbTsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAudGFicyB7XG4gICAgcGFkZGluZy1ib3R0b206IDM1cmVtOyB9IH1cbiIsIkBpbXBvcnQgXCIuLi8uLi9sb2NhbF9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplXCI7XG5cbkBpbXBvcnQgXCIuLi91dGlscy92YXJpYWJsZXNcIjtcblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJBcmlhbFwiLCBcIlZlcmRhbmFcIiwgXCJUYWhvbWFcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMC4wN3JlbTtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDRyZW0gMDtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5tYWluIHtcbiAgbWFyZ2luOiA0cmVtIDAgMnJlbSAwO1xufVxuXG4ucGFkZGluZy13cmFwcGVyIHtcbiAgcGFkZGluZzogMCA1LjI1cmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogJHhzKSB7XG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiA0cmVtIDAgMCAwO1xuICB9XG5cbiAgLnBhZGRpbmctd3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxcmVtO1xuICB9XG59XG4iLCIvKiBSZXNwb25zaXZlIGJyZWFrcG9pbnRzICovXG4keGw6IDE5MjBweDtcbiRsZzogMTYwMHB4O1xuJG1kOiAxMzY3cHg7XG4kc206IDc2OXB4O1xuJHhzOiA0NTBweDtcblxuLyogY29sb3JzICovXG4kd2hpdGU6ICNmZmZmZmY7XG4kYmxhY2s6ICMwMDAwMDA7XG4kZ3JleTogIzUwNTA1MDtcbiRuZXJvOiAjMWQxOTE4O1xuJHBhcGF5YXdoaXA6ICNmZmVmZDU7XG4kYmx1ZTogIzQyOGJmZjtcbiRyZWQ6ICNmZjRhNTM7XG4kZGFyazogIzMzMzMzMztcblxuJGFjY2VudDogJGJsdWU7XG4kYWNjZW50LWluYWN0aXZlOiBkZXNhdHVyYXRlKCRhY2NlbnQsIDg1JSk7XG4kc2Vjb25kYXJ5OiAkYWNjZW50LWluYWN0aXZlO1xuXG4vKiB0YWIgc2V0dGluZyAqL1xuJHRhYi1jb3VudDogNTtcbiRpbmRpY2F0b3Itd2lkdGg6IDUwcHg7XG4kaW5kaWNhdG9yLWhlaWdodDogNHB4O1xuXG4vKiBicmVha3BvaW50cyAqL1xuJGJyZWFrcG9pbnRzOiAoXG4gIG1lZGl1bTogI3skdGFiLWNvdW50KjI1MHB4fSxcbiAgc21hbGw6ICN7JHRhYi1jb3VudCoyNTBweH1cbik7XG5cbi8qIHNlbGVjdG9ycyByZWxhdGl2ZSB0byByYWRpbyBpbnB1dHMgKi9cbiRsYWJlbC1zZWxlY3RvcjogXCJ+IHVsID4gbGlcIjtcbiRzbGlkZXItc2VsZWN0b3I6IFwifiAuc2xpZGVyXCI7XG4kY29udGVudC1zZWxlY3RvcjogXCJ+IC5jb250ZW50ID4gc2VjdGlvblwiO1xuIiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LmVvdFwiKTtcbiAgc3JjOlxuICAgIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcbiAgICB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LUxpZ2h0LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLFxuICAgIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuICAgIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLFxuICAgIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTGlnaHQuc3ZnI01vbnRzZXJyYXQtTGlnaHRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbiIsIkBpbXBvcnQgXCIuLi9taXhpbnMvbWVkaWFcIjtcblxuJGhlYWRlci1idXR0b25zOiAyO1xuJGFuY2hvci1zbS1wb3NpdGlvbjogMjQ7XG4kYW5jaG9yLXhzLXBvc2l0aW9uOiAxMTtcblxuaGVhZGVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNHJlbSk7XG5cbiAgJjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRuZXJvO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9tYWluLmpwZWdcIik7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB6LWluZGV4OiAtMjtcbiAgfVxuXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRuZXJvO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIG9wYWNpdHk6IDAuNDtcbiAgfVxuXG4gIG5hdiB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiA3cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMThweDtcblxuICAgIGEge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICBwYWRkaW5nOiAwIDEuNXJlbTtcbiAgICB9XG4gIH1cblxuICAuaGVhZGVyX190aXRsZSB7XG4gICAgcGFkZGluZzogMTFyZW0gMDtcbiAgICB3aWR0aDogMzRyZW07XG4gICAgY29sb3I6ICR3aGl0ZTtcblxuICAgIGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDIuNXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDQuNXJlbTtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgfVxuICB9XG5cbiAgLmhlYWRlcl9fYW5jaG9yIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBwYWRkaW5nOiAxLjVyZW0gNXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAwIDAuNHJlbSAwLjRyZW0gMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgY29sb3I6ICRibGFjaztcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogLTMuNXJlbTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIHdpZHRoOiA1cmVtO1xuICAgICAgaGVpZ2h0OiAzcmVtO1xuICAgICAgYm9yZGVyLXJhZGl1czogMCAwLjI1cmVtIDAuMjVyZW0gMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwYXBheWF3aGlwO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDFzIGVhc2Utb3V0O1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICByaWdodDogLTQuNXJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgfVxuXG4gIC5jYXJkcyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgIGNvbHVtbi1nYXA6IDUwcHg7XG4gICAgd2lkdGg6IDY2LjY2JTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcblxuICAgIC5jYXJkc19fZWxlbWVudCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAxLjc1cmVtIDFyZW07XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgY291bnRlci1pbmNyZW1lbnQ6IGluc3Q7XG5cbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiMFwiIGNvdW50ZXIoaW5zdCk7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAtMy4yNXJlbTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDAuMjVyZW0gJHdoaXRlIHNvbGlkO1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICB9XG5cbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgIH1cblxuICAgICAgcCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgIH1cblxuICAgICAgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6ICRsZykge1xuICBoZWFkZXIge1xuICAgIC5oZWFkZXJfX3RpdGxlIHtcbiAgICAgIHBhZGRpbmc6IDdyZW0gMDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6ICRtZCkge1xuICBoZWFkZXIge1xuICAgIG5hdiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVyZW07XG4gICAgfVxuXG4gICAgLmhlYWRlcl9fdGl0bGUge1xuICAgICAgcGFkZGluZzogOXJlbSAwO1xuXG4gICAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIuMnJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMi41cmVtO1xuICAgICAgfVxuXG4gICAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5waG9uZS1hbmNob3Ige1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAuaGVhZGVyX19hbmNob3Ige1xuICAgICAgcGFkZGluZzogMXJlbSAzcmVtO1xuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGhlaWdodDogMi41cmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5jYXJkcyB7XG4gICAgICAuY2FyZHNfX2VsZW1lbnQge1xuICAgICAgICBwIHtcbiAgICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgIH1cblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogJHNtKSB7XG4gIGhlYWRlciB7XG4gICAgbmF2IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLmhlYWRlcl9fdGl0bGUge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuXG4gICAgLnBob25lLWFuY2hvciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAuaGVhZGVyX19hbmNob3Ige1xuICAgICAgYm90dG9tOiAjeyRhbmNob3Itc20tcG9zaXRpb259cmVtO1xuICAgIH1cblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGhlYWRlci1idXR0b25zIHtcbiAgICAgIC5oZWFkZXJfX2FuY2hvcjpudGgtb2YtdHlwZSgjeyRpICsgMX0pIHtcbiAgICAgICAgYm90dG9tOiAjeyRhbmNob3Itc20tcG9zaXRpb24gLSAoNSAqICRpKX1yZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmNhcmRzIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAkeHMpIHtcbiAgaGVhZGVyIHtcbiAgICAmOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL21haW4tbW9iaWxlLmpwZ1wiKTtcbiAgICB9XG5cbiAgICAuaGVhZGVyX190aXRsZSB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuXG4gICAgLmhlYWRlcl9fYW5jaG9yIHtcbiAgICAgIGJvdHRvbTogI3skYW5jaG9yLXhzLXBvc2l0aW9ufXJlbTtcbiAgICB9XG5cbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRoZWFkZXItYnV0dG9ucyB7XG4gICAgICAuaGVhZGVyX19hbmNob3I6bnRoLW9mLXR5cGUoI3skaSArIDF9KSB7XG4gICAgICAgIGJvdHRvbTogI3skYW5jaG9yLXhzLXBvc2l0aW9uIC0gKDUgKiAkaSl9cmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiZm9vdGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuXG4gIC5oZWFkZXItY29udGFpbmVyIHtcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xuICB9XG5cbiAgaDIge1xuICAgIG1hcmdpbjogMDtcbiAgICBsaW5lLWhlaWdodDogM3JlbTtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMnJlbTtcbiAgICB9XG5cbiAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgICB9XG4gIH1cblxuICAuY29udGFjdC1udW1iZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMnJlbTtcblxuICAgIC5jb250YWN0LWljb24ge1xuICAgICAgd2lkdGg6IDlyZW07XG4gICAgICBoZWlnaHQ6IDlyZW07XG4gICAgICBwYWRkaW5nOiAzcmVtO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgfVxuXG4gICAgLnNlcGFyYXRvciB7XG4gICAgICBib3JkZXItcmlnaHQ6IDAuMXJlbSAkYmxhY2sgc29saWQ7XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICBtYXJnaW46IGF1dG8gMCBhdXRvIDNyZW07XG4gICAgICBib3JkZXItYm90dG9tOiAwLjFyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIC5jb250YWN0LWljb24ge1xuICAgICAgICBmaWx0ZXI6IGludmVydCgzOCUpIHNlcGlhKDk1JSkgc2F0dXJhdGUoMzkzJSkgaHVlLXJvdGF0ZSg4N2RlZykgYnJpZ2h0bmVzcyg5NCUpIGNvbnRyYXN0KDgzJSk7XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBib3JkZXItY29sb3I6ICRibGFjaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuaW1nLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1heC13aWR0aDogNDByZW07XG4gICAgcGFkZGluZzogNXJlbTtcblxuICAgIGltZyB7XG4gICAgICBib3JkZXI6IDFyZW0gJGJsYWNrIHNvbGlkO1xuICAgIH1cbiAgfVxuXG4gIC5jb250YWN0LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgLmZyb250IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMHJlbTtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IDI7XG4gIH1cblxuICAuYmFjayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAtMTtcbiAgfVxuXG4gIC5tb2JpbGUtY29udGFjdC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAuYXV0aG9yIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuXG4gICAgc3BhbiB7XG4gICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAkc20pIHtcbiAgZm9vdGVyIHtcbiAgICAuaGVhZGVyLWNvbnRhaW5lciB7XG4gICAgICBtYXJnaW4tbGVmdDogMTAlO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAycmVtO1xuICAgICAgZm9udC1zaXplOiAycmVtO1xuXG4gICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgIH1cblxuICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tbGVmdDogMnJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuY29udGFjdC1udW1iZXIge1xuICAgICAgLmNvbnRhY3QtaWNvbiB7XG4gICAgICAgIHdpZHRoOiA1cmVtO1xuICAgICAgICBoZWlnaHQ6IDVyZW07XG4gICAgICAgIHBhZGRpbmc6IDFyZW07XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBtYXJnaW46IGF1dG8gMCBhdXRvIDFyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmltZy1jb250YWluZXIge1xuICAgICAgaW1nIHtcbiAgICAgICAgYm9yZGVyOiAwLjI1cmVtICRibGFjayBzb2xpZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZnJvbnQge1xuICAgICAgd2lkdGg6IDEwcmVtO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogJHhzKSB7XG4gIGZvb3RlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAuY29udGFjdC1jb250YWluZXIsXG4gICAgLmltZy1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAmOmZpcnN0LW9mLXR5cGUsXG4gICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5tb2JpbGUtY29udGFjdC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLmF1dGhvciB7XG4gICAgICBwYWRkaW5nLXRvcDogNXJlbTtcbiAgICB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCIuLi9taXhpbnMvdGFiXCI7XG5cbkBpbXBvcnQgXCIuLi91dGlscy92YXJpYWJsZXNcIjtcblxuLnRhYnMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAyMHJlbTtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgbWluLXdpZHRoOiAjeyR0YWItY291bnQgKiA2MHB4fTtcblxuICAudGFic19faGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICAgbGkge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGZsZXg6IDE7XG4gICAgICB3aWR0aDogI3sxMDAlLyR0YWItY291bnR9O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiA0cHg7XG5cbiAgICAgIGxhYmVsIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgcGFkZGluZzogMTRweCAwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAgICAgICAmOmhvdmVyLFxuICAgICAgICAmOmZvY3VzLFxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgb3V0bGluZTogMDtcbiAgICAgICAgICBjb2xvcjogbGlnaHRlbigkc2Vjb25kYXJ5LCAxNSUpO1xuICAgICAgICB9XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICB3aWR0aDogMS4yNXJlbTtcbiAgICAgICAgICBoZWlnaHQ6IDEuMjVyZW07XG4gICAgICAgICAgbWFyZ2luOiAwIDAuNXJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5zbGlkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogI3sxMDAlLyR0YWItY291bnR9O1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjMzcyBjdWJpYy1iZXppZXIoMC4zOCwgMC44LCAwLjMyLCAxLjA3KTtcbiAgfVxuXG4gIC5pbmRpY2F0b3Ige1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogJGluZGljYXRvci13aWR0aDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OiAkaW5kaWNhdG9yLWhlaWdodDtcbiAgICBiYWNrZ3JvdW5kOiBtaXgoJHBhcGF5YXdoaXAsICRuZXJvLCA2MCk7XG4gICAgYm9yZGVyLXJhZGl1czogMXB4O1xuICB9XG5cbiAgLmNvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG5cbiAgICBzZWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgYW5pbWF0aW9uOiB7XG4gICAgICAgIG5hbWU6IGNvbnRlbnQ7XG4gICAgICAgIGRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICBkdXJhdGlvbjogMC4zcztcbiAgICAgICAgdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgICAgaXRlcmF0aW9uLWNvdW50OiAxO1xuICAgICAgfVxuXG4gICAgICBoMiB7XG4gICAgICAgIGNvbG9yOiAkYWNjZW50O1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgICBoZWlnaHQ6IDNweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkYWNjZW50O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgICAgICBsZWZ0OiAxcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpbnB1dFtuYW1lPVwidGFiLWNvbnRyb2xcIl0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICBAaW5jbHVkZSB0YWJzIHtcbiAgICAgID4gbGFiZWwge1xuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBjb2xvcjogJGJsYWNrO1xuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgZmlsbDogJGFjY2VudDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgc21hbGwpKSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA4KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgY29udGVudCB7XG4gICAgZnJvbSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDUlKTtcbiAgICB9XG5cbiAgICB0byB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsIG1lZGl1bSkpIHtcbiAgICB1bCBsaSBsYWJlbCB7XG4gICAgICB3aGl0ZS1zcGFjZTogaW5pdGlhbDtcblxuICAgICAgYnIge1xuICAgICAgICBkaXNwbGF5OiBpbml0aWFsO1xuICAgICAgfVxuXG4gICAgICBzdmcge1xuICAgICAgICBoZWlnaHQ6IDEuNWVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgc21hbGwpKSB7XG4gICAgdWwgbGkgbGFiZWwge1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuXG4gICAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuc2xpZGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLmNvbnRlbnQge1xuICAgICAgbWFyZ2luLXRvcDogMjBweDtcblxuICAgICAgc2VjdGlvbiBoMiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogJHNtKSB7XG4gIC50YWJzIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjVyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6ICR4cykge1xuICAudGFicyB7XG4gICAgcGFkZGluZy1ib3R0b206IDM1cmVtO1xuICB9XG59XG4iLCJAaW1wb3J0IFwiLi4vdXRpbHMvdmFyaWFibGVzXCI7XG5cbkBtaXhpbiB0YWJzKFxuICAkbGFiZWwtc2VsZWN0b3I6ICRsYWJlbC1zZWxlY3RvcixcbiAgJHNsaWRlci1zZWxlY3RvcjogJHNsaWRlci1zZWxlY3RvcixcbiAgJGNvbnRlbnQtc2VsZWN0b3I6ICRjb250ZW50LXNlbGVjdG9yKSB7XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkdGFiLWNvdW50IHtcbiAgICAmOm50aC1vZi10eXBlKCN7JGl9KTpjaGVja2VkIHtcbiAgICAgICN7JGxhYmVsLXNlbGVjdG9yfTpudGgtY2hpbGQoI3skaX0pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG5cbiAgICAgICN7JHNsaWRlci1zZWxlY3Rvcn0ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoI3sxMDAlICogKCRpIC0gMSl9KTtcbiAgICAgIH1cblxuICAgICAgI3skY29udGVudC1zZWxlY3Rvcn06bnRoLWNoaWxkKCN7JGl9KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19 */
